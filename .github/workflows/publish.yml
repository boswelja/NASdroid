name: Build production

on:
  workflow_dispatch:
    inputs:
      prerelease:
        type: boolean
        description: Whether this release is a prerelease
        required: true

jobs:
  build-release:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Prepare signing keystore
        id: write-keystore
        uses: timheuer/base64-to-file@v1
        with:
          encodedString: ${{ secrets.KEYSTORE_CONTENT }}
          filename: "keystore.jks"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build
        run: ./gradlew assembleRelease bundleRelease
        env:
          ORG_GRADLE_PROJECT_storeFilePath: ${{ steps.write-keystore.outputs.filePath }}
          ORG_GRADLE_PROJECT_storePass: ${{ secrets.KEYSTORE_PASSWORD }}
          ORG_GRADLE_PROJECT_key: ${{ secrets.KEY_ALIAS }}
          ORG_GRADLE_PROJECT_keyPass: ${{ secrets.KEY_PASSWORD }}

      - name: Upload release
        uses: actions/upload-artifact@v4
        with:
          name: nasdroid-release
          path: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: error

  publish-github:
    runs-on: ubuntu-latest
    needs: build-release
    permissions:
      contents: write
    steps:
      - name: Download release files
        uses: actions/download-artifact@v4
        with:
          name: nasdroid-release

      - name: Calculate release version
        id: calculate-version
        run: echo "version=$(date +'%Y.%-W')" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.calculate-version.outputs.version }}
          artifacts: "apk/release/app-release.apk,bundle/release/app-release.aab"
          prerelease: ${{ github.event.inputs.prerelease }}
          makeLatest: true
          generateReleaseNotes: true